{"ast":null,"code":"var _jsxFileName = \"H:\\\\Documents\\\\AnaisGame\\\\chopin\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, InputGroup, FormControl, Row, Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"e9f2d6bd6f3a4badbd019e27348cc60b\";\nconst CLIENT_SECRET = \"af29a25fdd984740bf53174f77c78b13\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [tracks, setTracks] = useState([]);\n  const getData = async () => {\n    const response = await Axios.get(\"http://localhost:3000/getData\");\n    setData(response.data);\n  };\n  useEffect(() => {\n    var authParameters = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: 'grant_type=client_credentials&client_id=' + CLIENT_ID + '&client_secret=' + CLIENT_SECRET\n    };\n    fetch(\"https://accounts.spotify.com/api/token\", authParameters).then(result => result.json()).then(data => setAccessToken(data.access_token)).catch(error => console.log(error));\n\n    // getData();\n  }, []);\n  useEffect(() => {\n    if (searchInput.trim() === '') return; // Do nothing if searchInput is empty\n    search();\n  }, [searchInput]); // Dependency array includes searchInput\n\n  //Search\n  async function search() {\n    console.log(\"searching for: \" + searchInput);\n\n    // Get request using seach to get artistID\n    var searchParameters = {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + accessToken\n      }\n    };\n    var tracks = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=track', searchParameters).then(response => response.json()).then(data => {\n      console.log(data);\n      setTracks(data.tracks.items);\n    }).catch(error => console.log(error));\n\n    // Get request with Artst ID grab all the albums from taht artist\n\n    console.log(\"Track ID is : \" + songID);\n    var albums = await fetch('https://api.spotify.com/v1/tracks/' + songID + '/albums' + '?include_groups=album&limit=50', searchParameters).then(response => response.json()).then(data => {\n      console.log(data);\n      setAlbums(data.items);\n    });\n  }\n  const handleChange = e => {\n    setSearchInput(e.target.value);\n    search();\n  };\n\n  // Display all the albums\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        size: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          placehloder: \"Search For Artist\",\n          type: \"input\",\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              console.log(\"pressed enter\");\n            }\n          },\n          onChange: e => {\n            setSearchInput(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: search,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mx-2 row row-cols-4\",\n        children: tracks.map((track, i) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              src: track.album.images[0].url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"bM5izWcOTfuTOwnnClQwZKLffcM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Axios","Container","InputGroup","FormControl","Row","Card","Button","jsxDEV","_jsxDEV","CLIENT_ID","CLIENT_SECRET","App","_s","data","setData","searchInput","setSearchInput","accessToken","setAccessToken","tracks","setTracks","getData","response","get","authParameters","method","headers","body","fetch","then","result","json","access_token","catch","error","console","log","trim","search","searchParameters","items","songID","albums","setAlbums","handleChange","e","target","value","className","children","size","placehloder","type","onKeyPress","key","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","track","i","Img","src","album","images","url","Body","Title","name","_c","$RefreshReg$"],"sources":["H:/Documents/AnaisGame/chopin/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container, InputGroup, FormControl, Row, Card, Button} from 'react-bootstrap';\n\n\nconst CLIENT_ID = \"e9f2d6bd6f3a4badbd019e27348cc60b\";\nconst CLIENT_SECRET = \"af29a25fdd984740bf53174f77c78b13\";\n\nconst App = () => {\n  const [data, setData] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [tracks, setTracks] = useState([]);\n\n  const getData = async () => {\n    const response = await Axios.get(\"http://localhost:3000/getData\");\n    setData(response.data);\n  }\n\n  useEffect(() => {\n    var authParameters = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: 'grant_type=client_credentials&client_id=' + CLIENT_ID + '&client_secret=' + CLIENT_SECRET\n    }\n    fetch(\"https://accounts.spotify.com/api/token\", authParameters)\n      .then(result => result.json())\n      .then(data => setAccessToken(data.access_token))\n      .catch(error => console.log(error))\n\n    // getData();\n  }, []); \n\n  useEffect(() => {\n    if (searchInput.trim() === '') return; // Do nothing if searchInput is empty\n    search();\n  }, [searchInput]); // Dependency array includes searchInput\n\n\n  //Search\n  async function search() {\n    console.log(\"searching for: \" + searchInput);\n    \n    // Get request using seach to get artistID\n    var searchParameters = {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }\n\n    var tracks = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=track' , searchParameters)\n      .then(response => response.json())\n      \n      .then(data => {\n        console.log(data)\n        setTracks(data.tracks.items)\n      })\n      .catch(error => console.log(error))\n\n    \n    \n    \n    \n    // Get request with Artst ID grab all the albums from taht artist\n\n    console.log(\"Track ID is : \" + songID);\n    var albums = await fetch('https://api.spotify.com/v1/tracks/' + songID + '/albums' + '?include_groups=album&limit=50', searchParameters)\n      .then(response => response.json())\n      .then(data => { \n        console.log(data)\n        setAlbums(data.items)\n      });\n  }\n\n  const handleChange = (e) => {\n    setSearchInput(e.target.value);\n    search();\n\n  }\n\n\n    // Display all the albums\n\n\n\n\n\n    return (\n        \n        <div className=\"App\">\n        <Container>\n          <InputGroup className=\"mb-3\" size=\"lg\">\n            <FormControl\n              placehloder=\"Search For Artist\"\n              type=\"input\"\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') {\n                  console.log(\"pressed enter\");\n                }\n              }}\n              onChange={(e) => {\n                setSearchInput(e.target.value);\n              }}\n            ></FormControl>\n            <Button\n              onClick={search}>\n              Search\n            </Button>\n          </InputGroup>\n        </Container>\n\n        <Container>\n          <Row className=\"mx-2 row row-cols-4\">\n            {tracks.map( (track,i) => {\n              return (\n                <Card>\n                  <Card.Img src={track.album.images[0].url}/>\n                  <Card.Body>\n                    <Card.Title>{track.name}</Card.Title>\n\n                  </Card.Body>\n                </Card>\n              )\n            })}\n            \n          </Row>\n        </Container>\n\n\n        </div>\n    );\n    \n\n}\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAC7C,SAAQC,SAAS,EAAEC,UAAU,EAAEC,WAAW,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtF,MAAMC,SAAS,GAAG,kCAAkC;AACpD,MAAMC,aAAa,GAAG,kCAAkC;AAExD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMsB,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,+BAA+B,CAAC;IACjET,OAAO,CAACQ,QAAQ,CAACT,IAAI,CAAC;EACxB,CAAC;EAEDf,SAAS,CAAC,MAAM;IACd,IAAI0B,cAAc,GAAG;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAE,0CAA0C,GAAGlB,SAAS,GAAG,iBAAiB,GAAGC;IACrF,CAAC;IACDkB,KAAK,CAAC,wCAAwC,EAAEJ,cAAc,CAAC,CAC5DK,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAC7BF,IAAI,CAAChB,IAAI,IAAIK,cAAc,CAACL,IAAI,CAACmB,YAAY,CAAC,CAAC,CAC/CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;;IAErC;EACF,CAAC,EAAE,EAAE,CAAC;EAENpC,SAAS,CAAC,MAAM;IACd,IAAIiB,WAAW,CAACsB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC;IACvCC,MAAM,CAAC,CAAC;EACV,CAAC,EAAE,CAACvB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAGnB;EACA,eAAeuB,MAAMA,CAAA,EAAG;IACtBH,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGrB,WAAW,CAAC;;IAE5C;IACA,IAAIwB,gBAAgB,GAAG;MACrBd,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGT;MAC/B;IACF,CAAC;IAED,IAAIE,MAAM,GAAG,MAAMS,KAAK,CAAC,sCAAsC,GAAGb,WAAW,GAAG,aAAa,EAAGwB,gBAAgB,CAAC,CAC9GV,IAAI,CAACP,QAAQ,IAAIA,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAEjCF,IAAI,CAAChB,IAAI,IAAI;MACZsB,OAAO,CAACC,GAAG,CAACvB,IAAI,CAAC;MACjBO,SAAS,CAACP,IAAI,CAACM,MAAM,CAACqB,KAAK,CAAC;IAC9B,CAAC,CAAC,CACDP,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;;IAMrC;;IAEAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGK,MAAM,CAAC;IACtC,IAAIC,MAAM,GAAG,MAAMd,KAAK,CAAC,oCAAoC,GAAGa,MAAM,GAAG,SAAS,GAAG,gCAAgC,EAAEF,gBAAgB,CAAC,CACrIV,IAAI,CAACP,QAAQ,IAAIA,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAChB,IAAI,IAAI;MACZsB,OAAO,CAACC,GAAG,CAACvB,IAAI,CAAC;MACjB8B,SAAS,CAAC9B,IAAI,CAAC2B,KAAK,CAAC;IACvB,CAAC,CAAC;EACN;EAEA,MAAMI,YAAY,GAAIC,CAAC,IAAK;IAC1B7B,cAAc,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BT,MAAM,CAAC,CAAC;EAEV,CAAC;;EAGC;;EAMA,oBAEI9B,OAAA;IAAKwC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpBzC,OAAA,CAACP,SAAS;MAAAgD,QAAA,eACRzC,OAAA,CAACN,UAAU;QAAC8C,SAAS,EAAC,MAAM;QAACE,IAAI,EAAC,IAAI;QAAAD,QAAA,gBACpCzC,OAAA,CAACL,WAAW;UACVgD,WAAW,EAAC,mBAAmB;UAC/BC,IAAI,EAAC,OAAO;UACZC,UAAU,EAAGR,CAAC,IAAK;YACjB,IAAIA,CAAC,CAACS,GAAG,KAAK,OAAO,EAAE;cACrBnB,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;YAC9B;UACF,CAAE;UACFmB,QAAQ,EAAGV,CAAC,IAAK;YACf7B,cAAc,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;UAChC;QAAE;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACU,CAAC,eACfnD,OAAA,CAACF,MAAM;UACLsD,OAAO,EAAEtB,MAAO;UAAAW,QAAA,EAAC;QAEnB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAEZnD,OAAA,CAACP,SAAS;MAAAgD,QAAA,eACRzC,OAAA,CAACJ,GAAG;QAAC4C,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EACjC9B,MAAM,CAAC0C,GAAG,CAAE,CAACC,KAAK,EAACC,CAAC,KAAK;UACxB,oBACEvD,OAAA,CAACH,IAAI;YAAA4C,QAAA,gBACHzC,OAAA,CAACH,IAAI,CAAC2D,GAAG;cAACC,GAAG,EAAEH,KAAK,CAACI,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC;YAAI;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,eAC3CnD,OAAA,CAACH,IAAI,CAACgE,IAAI;cAAApB,QAAA,eACRzC,OAAA,CAACH,IAAI,CAACiE,KAAK;gBAAArB,QAAA,EAAEa,KAAK,CAACS;cAAI;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE5B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAEX,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGP,CAAC;AAId,CAAC;AAAA/C,EAAA,CAjIKD,GAAG;AAAA6D,EAAA,GAAH7D,GAAG;AAkIT,eAAeA,GAAG;AAAA,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}