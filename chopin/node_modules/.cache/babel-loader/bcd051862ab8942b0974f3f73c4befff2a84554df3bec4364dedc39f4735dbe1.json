{"ast":null,"code":"var _jsxFileName = \"H:\\\\Documents\\\\AnaisGame\\\\chopin\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { useGameContext } from './context/GameContext';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './Game.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nfunction Game() {\n  _s();\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  const [nowPlaying, setNowPlaying] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  const {\n    playlist,\n    setPlaylist\n  } = useGameContext();\n  const [round, setRound] = useState(-1);\n  const {\n    currentUser,\n    setCurrentUser\n  } = useGameContext();\n  const [playlistName, setPlaylistName] = useState('');\n  const {\n    gamePlaylist,\n    setGamePlaylist\n  } = useGameContext();\n  const {\n    playerList,\n    setPlayerList\n  } = useGameContext();\n  const [replay, setReplay] = useState(false);\n  const [showPlaylistForm, setShowPlaylistForm] = useState(false);\n  const [trigger, setTrigger] = useState(false);\n  const [spotifyObjPlaylist, setSpotifyObjPlaylist] = useState(null);\n  const [spotifyObjPlaylistID, setSpotifyObjPlaylistID] = useState('');\n  const [albumImage, setAlbumImage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    setGamePlaylist(gamePlaylist.concat(playlist));\n    console.log(\"GamePlaylist : \", gamePlaylist);\n  }, []);\n  useEffect(() => {\n    if (spotifyObjPlaylist && spotifyObjPlaylist.images && spotifyObjPlaylist.images.length > 0) {\n      console.log('Spotify Object Playlist updated:', spotifyObjPlaylist);\n      setAlbumImage(spotifyObjPlaylist.images[0].url);\n    }\n  }, [spotifyObjPlaylist]);\n  const handlePlaylistNameChange = e => {\n    setPlaylistName(e.target.value);\n  };\n  useEffect(() => {\n    const intervalId = setInterval(getNowPlaying, 8000);\n    return () => clearInterval(intervalId);\n  }, []);\n  useEffect(() => {\n    console.log(\"Playlist : \", playlist);\n    if (nowPlaying.progress_ms >= nowPlaying.duration_ms || nowPlaying.progress_ms == 0 && nowPlaying.is_playing == false && round != -1) {\n      skip();\n    }\n  }, [nowPlaying]);\n  const getNowPlaying = () => {\n    spotifyApi.getMyCurrentPlaybackState().then(function (data) {\n      console.log('CurrentPlaybackstate :', data);\n      if (data) {\n        setNowPlaying({\n          name: data.item.name,\n          albumArt: data.item.album.images[0].url,\n          progress_ms: data.progress_ms,\n          duration_ms: data.item.duration_ms,\n          uri: data.item.uri,\n          is_playing: data.is_playing,\n          artist: data.item.artists[0].name\n        });\n      }\n    }, function (err) {\n      console.log('Something went wrong in hte currentPlaybackstate', err);\n    });\n  };\n  const savePlaylist = async playlistName => {\n    try {\n      // Create the playlist\n      const createData = await spotifyApi.createPlaylist(currentUser.id, {\n        name: playlistName,\n        public: true\n      });\n      console.log('Created playlist!', createData); // Log created playlist\n\n      // Update state with the created playlist\n      setSpotifyObjPlaylist(createData);\n      setSpotifyObjPlaylistID(createData.id);\n\n      // Add tracks to the playlist\n      const addData = await spotifyApi.addTracksToPlaylist(createData.id, gamePlaylist.map(song => song.uri));\n      console.log('Added tracks to playlist!', addData); // Log added tracks\n\n      // Fetch updated playlist data to ensure it has tracks\n      const updatedPlaylist = await spotifyApi.getPlaylist(createData.id);\n      console.log('Updated playlist after adding tracks:', updatedPlaylist); // Log updated playlist\n      setSpotifyObjPlaylist(updatedPlaylist);\n    } catch (err) {\n      console.error('Something went wrong!', err); // Log any error that occurs\n    }\n  };\n  function play(track) {\n    // Vérifier si un ID de morceau est fourni\n    if (!track) {\n      console.log('No song ID provided');\n      return Promise.resolve(1); // Return a resolved promise with value 1\n    }\n\n    // Appel à l'API Spotify pour jouer un morceau sur un appareil actif\n    return spotifyApi.play({\n      uris: [track.uri]\n    }).then(function () {\n      console.log('Playback started for song ID:', track);\n      playlist.splice(playlist.indexOf(track), 1);\n      setRound(round + 1);\n\n      // Use setTimeout to handle playback duration and calling next step\n      setTimeout(() => {\n        getNowPlaying(); // Appelle la fonction next après que la durée soit écoulée\n      }, track.duration_ms);\n      return 0; // Return 0 to indicate success\n    }).catch(function (err) {\n      if (err.status === 404 && err.responseText.includes(\"NO_ACTIVE_DEVICE\")) {\n        alert('No active device found to play the track.');\n        return 1; // Return 1 if no active device is found\n      } else {\n        console.log('Something went wrong while trying to play the track:', err);\n        return 1; // Return 1 for other errors\n      }\n    });\n  }\n  const start = () => {\n    const randint = Math.floor(Math.random() * playlist.length);\n    play(playlist[randint]);\n    getNowPlaying();\n  };\n  const skip = async () => {\n    console.log('SONG SKIPPED');\n    if (playlist.length !== 0) {\n      const randint = Math.floor(Math.random() * playlist.length);\n      try {\n        // Wait for the play() function to complete\n        console.log('randint:', randint);\n        await play(playlist[randint]);\n\n        // Once play() is finished, update nowPlaying immediately\n        console.log('randintINTRY:', randint);\n        console.log('playlist:', playlist);\n        setNowPlaying({\n          name: playlist[randint].name,\n          albumArt: playlist[randint].album.images[0].url\n        });\n      } catch (err) {\n        console.error('Error while playing track:', err);\n      }\n    } else {\n      exit();\n    }\n  };\n  const exit = () => {\n    setReplay(true);\n    spotifyApi.pause().then(function () {\n      console.log('Playback paused');\n    }).catch(function (err) {\n      console.log('Something went wrong while trying to pause the playback:', err);\n    });\n  };\n  const handleReplay = () => {\n    navigate('/song-selection');\n  };\n  const handleLeave = () => {\n    setPlaylistName(prevPlaylistName => {\n      var newPlaylistName = prevPlaylistName;\n      playerList.forEach(playerName => {\n        newPlaylistName = newPlaylistName + playerName.trim().slice(0, 3);\n      });\n      return \"[Chopin] \" + newPlaylistName;\n    });\n    setShowPlaylistForm(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.gameContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gameInnerContainer,\n      children: round === -1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.gameButton,\n        onClick: start,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: replay ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!showPlaylistForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.replayOrLeave,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.gameButton,\n              onClick: handleReplay,\n              children: \"Replay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.gameButton,\n              onClick: handleLeave,\n              children: \"Leave\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 19\n          }, this), showPlaylistForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [!spotifyObjPlaylist && /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Save to Spotify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 23\n            }, this), !spotifyObjPlaylist && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.playlistInputContainer,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"playlistName\",\n                type: \"text\",\n                value: playlistName,\n                onChange: e => setPlaylistName(e.target.value),\n                placeholder: \"MyPlaylist\",\n                className: styles.gameInput // Apply input styles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 23\n            }, this), spotifyObjPlaylist && spotifyObjPlaylist.external_urls.spotify && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.playlistLink,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.coverImageContainer,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: albumImage,\n                  className: styles.playlistCoverPicture\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 25\n              }, this), playlistName, \" : \", '\\n', /*#__PURE__*/_jsxDEV(\"a\", {\n                href: spotifyObjPlaylist.external_urls.spotify,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: spotifyObjPlaylist.external_urls.spotify\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 23\n            }, this), !spotifyObjPlaylist && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.gameButton,\n              onClick: () => savePlaylist(playlistName),\n              children: \"Save Playlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.nowPlaying,\n            children: [nowPlaying.name, \" - \", nowPlaying.artist]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.albumImageContainer,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: nowPlaying.albumArt,\n              className: styles.nowPlayingImage,\n              alt: nowPlaying.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.gameButton,\n            onClick: skip,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"qkPrxmqsjNdbxPgpJjGIf5aEAlw=\", false, function () {\n  return [useGameContext, useGameContext, useGameContext, useGameContext, useNavigate];\n});\n_c = Game;\n;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useLocation","SpotifyWebApi","useGameContext","useNavigate","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","spotifyApi","Game","_s","spotifyToken","setSpotifyToken","nowPlaying","setNowPlaying","loggedIn","setLoggedIn","playlist","setPlaylist","round","setRound","currentUser","setCurrentUser","playlistName","setPlaylistName","gamePlaylist","setGamePlaylist","playerList","setPlayerList","replay","setReplay","showPlaylistForm","setShowPlaylistForm","trigger","setTrigger","spotifyObjPlaylist","setSpotifyObjPlaylist","spotifyObjPlaylistID","setSpotifyObjPlaylistID","albumImage","setAlbumImage","navigate","concat","console","log","images","length","url","handlePlaylistNameChange","e","target","value","intervalId","setInterval","getNowPlaying","clearInterval","progress_ms","duration_ms","is_playing","skip","getMyCurrentPlaybackState","then","data","name","item","albumArt","album","uri","artist","artists","err","savePlaylist","createData","createPlaylist","id","public","addData","addTracksToPlaylist","map","song","updatedPlaylist","getPlaylist","error","play","track","Promise","resolve","uris","splice","indexOf","setTimeout","catch","status","responseText","includes","alert","start","randint","Math","floor","random","exit","pause","handleReplay","handleLeave","prevPlaylistName","newPlaylistName","forEach","playerName","trim","slice","className","gameContainer","children","gameInnerContainer","gameButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","replayOrLeave","playlistInputContainer","type","onChange","placeholder","gameInput","external_urls","spotify","playlistLink","coverImageContainer","src","playlistCoverPicture","href","rel","albumImageContainer","nowPlayingImage","alt","_c","$RefreshReg$"],"sources":["H:/Documents/AnaisGame/chopin/src/Game.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { useGameContext } from './context/GameContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './Game.module.css';\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\n\r\n\r\n\r\nfunction Game() {\r\n  const [spotifyToken, setSpotifyToken] = useState(null);\r\n  const [nowPlaying, setNowPlaying] = useState({});\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const { playlist, setPlaylist } = useGameContext();\r\n  const [round, setRound] = useState(-1);\r\n  const { currentUser, setCurrentUser } = useGameContext();\r\n  const [playlistName, setPlaylistName] = useState('');\r\n  const { gamePlaylist, setGamePlaylist } = useGameContext();\r\n  const { playerList, setPlayerList } = useGameContext();\r\n  const [replay, setReplay] = useState(false);\r\n  const [showPlaylistForm, setShowPlaylistForm] = useState(false);\r\n  const [trigger, setTrigger] = useState(false);\r\n  const [spotifyObjPlaylist, setSpotifyObjPlaylist] = useState(null);\r\n  const [spotifyObjPlaylistID, setSpotifyObjPlaylistID] = useState('')\r\n  const [albumImage, setAlbumImage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setGamePlaylist(gamePlaylist.concat(playlist));\r\n    console.log(\"GamePlaylist : \", gamePlaylist);\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    if (spotifyObjPlaylist && spotifyObjPlaylist.images && spotifyObjPlaylist.images.length > 0) {\r\n      console.log('Spotify Object Playlist updated:', spotifyObjPlaylist);\r\n      setAlbumImage(spotifyObjPlaylist.images[0].url);\r\n    }\r\n  }, [spotifyObjPlaylist]);\r\n\r\n\r\n  const handlePlaylistNameChange = (e) => {\r\n    setPlaylistName(e.target.value);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(getNowPlaying, 8000);\r\n    return () => clearInterval(intervalId);\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    console.log(\"Playlist : \", playlist);\r\n    if (nowPlaying.progress_ms >= nowPlaying.duration_ms || (nowPlaying.progress_ms == 0 && nowPlaying.is_playing == false && round != -1)) {\r\n      skip();\r\n    }\r\n  }, [nowPlaying]);\r\n\r\n  const getNowPlaying = () => {\r\n    \r\n    spotifyApi.getMyCurrentPlaybackState()\r\n      .then(function (data) {\r\n        console.log('CurrentPlaybackstate :', data);\r\n        if (data) {\r\n          setNowPlaying({\r\n            name: data.item.name,\r\n            albumArt: data.item.album.images[0].url,\r\n            progress_ms: data.progress_ms,\r\n            duration_ms: data.item.duration_ms,\r\n            uri: data.item.uri,\r\n            is_playing: data.is_playing,\r\n            artist: data.item.artists[0].name\r\n          });\r\n        }\r\n      },\r\n        function (err) {\r\n          console.log('Something went wrong in hte currentPlaybackstate', err);\r\n        }\r\n      )\r\n  }\r\n\r\n  const savePlaylist = async (playlistName) => {\r\n    try {\r\n      // Create the playlist\r\n      const createData = await spotifyApi.createPlaylist(currentUser.id, {\r\n        name: playlistName,\r\n        public: true,\r\n      });\r\n      console.log('Created playlist!', createData); // Log created playlist\r\n\r\n      // Update state with the created playlist\r\n      setSpotifyObjPlaylist(createData);\r\n      setSpotifyObjPlaylistID(createData.id);\r\n\r\n      // Add tracks to the playlist\r\n      const addData = await spotifyApi.addTracksToPlaylist(createData.id, gamePlaylist.map((song) => song.uri));\r\n      console.log('Added tracks to playlist!', addData); // Log added tracks\r\n\r\n      // Fetch updated playlist data to ensure it has tracks\r\n      const updatedPlaylist = await spotifyApi.getPlaylist(createData.id);\r\n      console.log('Updated playlist after adding tracks:', updatedPlaylist); // Log updated playlist\r\n      setSpotifyObjPlaylist(updatedPlaylist);\r\n\r\n    } catch (err) {\r\n      console.error('Something went wrong!', err); // Log any error that occurs\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  function play(track) {\r\n    // Vérifier si un ID de morceau est fourni\r\n    if (!track) {\r\n      console.log('No song ID provided');\r\n      return Promise.resolve(1); // Return a resolved promise with value 1\r\n    }\r\n\r\n    // Appel à l'API Spotify pour jouer un morceau sur un appareil actif\r\n    return spotifyApi.play({\r\n      uris: [track.uri]\r\n    })\r\n      .then(function () {\r\n        console.log('Playback started for song ID:', track);\r\n        playlist.splice(playlist.indexOf(track), 1);\r\n        setRound(round + 1);\r\n\r\n        // Use setTimeout to handle playback duration and calling next step\r\n        setTimeout(() => {\r\n          getNowPlaying();  // Appelle la fonction next après que la durée soit écoulée\r\n        }, track.duration_ms);\r\n\r\n        return 0;  // Return 0 to indicate success\r\n      })\r\n      .catch(function (err) {\r\n        if (err.status === 404 && err.responseText.includes(\"NO_ACTIVE_DEVICE\")) {\r\n          alert('No active device found to play the track.');\r\n          return 1; // Return 1 if no active device is found\r\n        } else {\r\n          console.log('Something went wrong while trying to play the track:', err);\r\n          return 1;  // Return 1 for other errors\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  const start = () => {\r\n\r\n    const randint = Math.floor(Math.random() * playlist.length);\r\n    play(playlist[randint]);\r\n    getNowPlaying();\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  const skip = async () => {\r\n    console.log('SONG SKIPPED');\r\n  \r\n    if (playlist.length !== 0) {\r\n      const randint = Math.floor(Math.random() * playlist.length);\r\n  \r\n      try {\r\n        // Wait for the play() function to complete\r\n        console.log('randint:', randint);\r\n        await play(playlist[randint]);\r\n  \r\n        // Once play() is finished, update nowPlaying immediately\r\n        console.log('randintINTRY:', randint);\r\n        console.log('playlist:', playlist);\r\n        setNowPlaying({\r\n          name: playlist[randint].name,\r\n          albumArt: playlist[randint].album.images[0].url,\r\n        });\r\n      } catch (err) {\r\n        console.error('Error while playing track:', err);\r\n      }\r\n    } else {\r\n      exit();\r\n    }\r\n  }\r\n  const exit = () => {\r\n    setReplay(true);\r\n    spotifyApi.pause()\r\n      .then(function () {\r\n        console.log('Playback paused');\r\n      })\r\n      .catch(function (err) {\r\n        console.log('Something went wrong while trying to pause the playback:', err);\r\n      });\r\n\r\n  }\r\n  const handleReplay = () => {\r\n    navigate('/song-selection');\r\n  }\r\n  const handleLeave = () => {\r\n    setPlaylistName((prevPlaylistName) => {\r\n      var newPlaylistName = prevPlaylistName;\r\n      playerList.forEach((playerName) => {\r\n        newPlaylistName = newPlaylistName + playerName.trim().slice(0, 3);\r\n      })\r\n      return \"[Chopin] \" + newPlaylistName;\r\n    })\r\n    setShowPlaylistForm(true);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.gameContainer}>\r\n      <div className={styles.gameInnerContainer}>\r\n        {round === -1 ? (\r\n          <button className={styles.gameButton} onClick={start}>Play</button>\r\n        ) : (\r\n          <>\r\n            {replay ? (\r\n              <>\r\n                {!showPlaylistForm && (\r\n                  <div className={styles.replayOrLeave}>\r\n                    <button className={styles.gameButton} onClick={handleReplay}>Replay</button>\r\n                    <button className={styles.gameButton} onClick={handleLeave}>Leave</button>\r\n                  </div>\r\n                )}\r\n                {showPlaylistForm && (\r\n                  <>\r\n                    {/* Input for naming the playlist */}\r\n                    {!spotifyObjPlaylist && (\r\n                      <h3>\r\n                        Save to Spotify\r\n                      </h3>\r\n                    )}\r\n\r\n                    {!spotifyObjPlaylist && (\r\n                      <div className={styles.playlistInputContainer}>\r\n                        <input\r\n                          id=\"playlistName\"\r\n                          type=\"text\"\r\n                          value={playlistName}\r\n                          onChange={(e) => setPlaylistName(e.target.value)}\r\n                          placeholder=\"MyPlaylist\"\r\n                          className={styles.gameInput} // Apply input styles\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Show the link if the playlist was successfully saved */}\r\n                    {spotifyObjPlaylist && spotifyObjPlaylist.external_urls.spotify && (\r\n                      <div className={styles.playlistLink}>\r\n                        <div className={styles.coverImageContainer}>\r\n                          <img src={albumImage} className={styles.playlistCoverPicture} />\r\n                        </div>\r\n                        {playlistName} : {'\\n'}\r\n                        <a\r\n                          href={spotifyObjPlaylist.external_urls.spotify}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {spotifyObjPlaylist.external_urls.spotify}\r\n                        </a>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Save playlist button */}\r\n                    {!spotifyObjPlaylist && (\r\n                      <button className={styles.gameButton} onClick={() => savePlaylist(playlistName)}>\r\n                        Save Playlist\r\n                      </button>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                \r\n                <div className={styles.nowPlaying}>{nowPlaying.name} - {nowPlaying.artist}</div>\r\n                <div className={styles.albumImageContainer}> {/* New container for the image */}\r\n                  <img src={nowPlaying.albumArt} className={styles.nowPlayingImage} alt={nowPlaying.name} />\r\n                </div>\r\n                <button className={styles.gameButton} onClick={skip}>Next</button>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}