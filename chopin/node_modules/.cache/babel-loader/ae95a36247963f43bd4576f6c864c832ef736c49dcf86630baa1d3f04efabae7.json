{"ast":null,"code":"var _jsxFileName = \"H:\\\\Documents\\\\AnaisGame\\\\chopin\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { useGameContext } from './context/GameContext';\nimport { useNavigate } from 'react-router-dom';\nimport Game from './Game';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar spotifyApi = new SpotifyWebApi();\nconst getTokenfromUrl = () => {\n  return window.location.hash.substring(1).split('&').reduce((initial, item) => {\n    let parts = item.split('=');\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n};\nfunction Login() {\n  _s();\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  const [nowPlaying, setNowPlaying] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  const {\n    playlist,\n    setPlaylist\n  } = useGameContext();\n  const {\n    currentUser,\n    setCurrentUser\n  } = useGameContext();\n  useEffect(() => {\n    console.log(\"Playlist in Login.js: \", playlist);\n  }, [playlist]);\n  useEffect(() => {\n    console.log(\"This is what we derived from the URL: \", getTokenfromUrl());\n    const spotifyToken = getTokenfromUrl().access_token;\n    window.location.hash = \"\";\n    console.log(\"This is the token: \", spotifyToken);\n    if (spotifyToken) {\n      setSpotifyToken(spotifyToken);\n      //use SpotifyWebApi to get access to Spotify API\n      spotifyApi.setAccessToken(spotifyToken);\n      setLoggedIn(true);\n    }\n    spotifyApi.getMe().then(function (data) {\n      console.log('Some information about the authenticated user', data);\n      setCurrentUser(data);\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n  });\n  const getNowPlaying = () => {\n    setNowPlaying({\n      name: playlist[0].name,\n      albumArt: playlist[0].album.images[0].url\n    });\n    spotifyApi.play({\n      uris: [\"spotify:track:\" + playlist[0].id]\n    }).then(function (data) {\n      console.log('Artist albums', data.body);\n    }, function (err) {\n      if (err.status === 404) {\n        alert('No Active Device');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: loggedIn ? /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) // Render Game component if loggedIn is true\n    : /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"http://localhost:8888\",\n      children: \"Login to Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) // Render login link if loggedIn is false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"bpRzh6YhIgFY1Ug25q+DlfShytA=\", false, function () {\n  return [useGameContext, useGameContext];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useLocation","SpotifyWebApi","useGameContext","useNavigate","Game","jsxDEV","_jsxDEV","spotifyApi","getTokenfromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","Login","_s","spotifyToken","setSpotifyToken","nowPlaying","setNowPlaying","loggedIn","setLoggedIn","playlist","setPlaylist","currentUser","setCurrentUser","console","log","access_token","setAccessToken","getMe","then","data","err","getNowPlaying","name","albumArt","album","images","url","play","uris","id","body","status","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["H:/Documents/AnaisGame/chopin/src/Login.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { useGameContext } from './context/GameContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Game from './Game';\r\nvar spotifyApi = new SpotifyWebApi(); \r\n\r\n\r\n\r\nconst getTokenfromUrl = () => {\r\n    return window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((initial, item) => {\r\n        let parts = item.split('=');\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        return initial;\r\n    }, {});\r\n}\r\n\r\n\r\nfunction Login() {\r\n    const [spotifyToken, setSpotifyToken] = useState(null);\r\n    const [nowPlaying, setNowPlaying] = useState({});\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const { playlist, setPlaylist } = useGameContext();\r\n    const { currentUser, setCurrentUser } = useGameContext();\r\n\r\n    useEffect(() => {\r\n        console.log(\"Playlist in Login.js: \", playlist);\r\n      }, [playlist]);\r\n    \r\n\r\n    useEffect(() => {\r\n        console.log(\"This is what we derived from the URL: \", getTokenfromUrl());\r\n        const spotifyToken = getTokenfromUrl().access_token;\r\n        window.location.hash = \"\";\r\n        console.log(\"This is the token: \", spotifyToken);\r\n\r\n        if (spotifyToken) {\r\n            setSpotifyToken(spotifyToken);\r\n            //use SpotifyWebApi to get access to Spotify API\r\n            spotifyApi.setAccessToken(spotifyToken);\r\n            setLoggedIn(true);\r\n        }\r\n        spotifyApi.getMe()\r\n            .then(function(data) {\r\n                console.log('Some information about the authenticated user', data);\r\n                setCurrentUser(data);\r\n        }, function(err) {\r\n          console.log('Something went wrong!', err);\r\n        });\r\n\r\n    });\r\n\r\n    const getNowPlaying = () => {\r\n\r\n        setNowPlaying({\r\n                     name: playlist[0].name,\r\n                     albumArt: playlist[0].album.images[0].url\r\n                 });\r\n\r\n        spotifyApi.play({uris: [\"spotify:track:\" + playlist[0].id]}).then(\r\n            function(data) {\r\n              console.log('Artist albums', data.body);\r\n            },\r\n            function(err) {\r\n              if (err.status === 404) {\r\n                alert('No Active Device');\r\n              }\r\n            });\r\n    \r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\"> \r\n        {loggedIn ? (\r\n        <Game /> // Render Game component if loggedIn is true\r\n      ) : (\r\n        <a href=\"http://localhost:8888\">Login to Spotify</a> // Render login link if loggedIn is false\r\n      )}\r\n    </div>\r\n    );\r\n    \r\n}\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}