{"ast":null,"code":"var _jsxFileName = \"H:\\\\Documents\\\\AnaisGame\\\\chopin\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { useGameContext } from './context/GameContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nconst getTokenfromUrl = () => {\n  return window.location.hash.substring(1).split('&').reduce((initial, item) => {\n    let parts = item.split('=');\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n};\nfunction Login() {\n  _s();\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  const [nowPlaying, setNowPlaying] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  const {\n    playlist,\n    setPlaylist\n  } = useGameContext();\n  useEffect(() => {\n    console.log(\"Playlist in Login.js: \", playlist);\n  }, [playlist]);\n  useEffect(() => {\n    console.log(\"This is what we derived from the URL: \", getTokenfromUrl());\n    const spotifyToken = getTokenfromUrl().access_token;\n    window.location.hash = \"\";\n    console.log(\"This is the token: \", spotifyToken);\n    if (spotifyToken) {\n      setSpotifyToken(spotifyToken);\n      //use SpotifyWebApi to get access to Spotify API\n      spotifyApi.setAccessToken(spotifyToken);\n      setLoggedIn(true);\n    }\n  });\n  const getNowPlaying = () => {\n    console.log(\"This is the playlist: \", playlist);\n    // spotifyApi.getMyCurrentPlaybackState()\n    // .then((response) => {\n    //     console.log(\"the id of the song is : \" , response.item.id);\n    //     setNowPlaying({\n    //         name: response.item.name,\n    //         albumArt: response.item.album.images[0].url\n    //     });\n    // })\n\n    setNowPlaying({\n      name: playlist[0].name,\n      albumArt: playlist[0].album.images[0].url\n    });\n    console.log(\"playlist[0] song id: \", playlist[0].id);\n    const playTrack = async () => {\n      try {\n        spotifyApi.play({\n          uris: [\"spotify:track:\" + playlist[0].id]\n        });\n      } catch (error) {\n        console.log(\"Error :\", error.response);\n        // Check if the error response indicates no active device\n        if (error.response && error.response.error && error.response.error.reason === \"NO_ACTIVE_DEVICE\") {\n          alert(\"No active device found. Please make sure your Spotify app is open and connected.\");\n        } else {\n          alert(\"An error occurred while trying to play the track. Please try again.\");\n        }\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [!loggedIn && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"http://localhost:8888\",\n      children: \"Login to Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 31\n    }, this), loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getNowPlaying,\n      children: \"Check Now Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 30\n    }, this), loggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Now Playing: \", nowPlaying.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 30\n    }, this), loggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: nowPlaying.albumArt,\n        style: {\n          height: 150\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"y4e3KopkVfggeBBJr9h/XxfD2nw=\", false, function () {\n  return [useGameContext];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useLocation","SpotifyWebApi","useGameContext","useNavigate","jsxDEV","_jsxDEV","spotifyApi","getTokenfromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","Login","_s","spotifyToken","setSpotifyToken","nowPlaying","setNowPlaying","loggedIn","setLoggedIn","playlist","setPlaylist","console","log","access_token","setAccessToken","getNowPlaying","name","albumArt","album","images","url","id","playTrack","play","uris","error","response","reason","alert","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","style","height","_c","$RefreshReg$"],"sources":["H:/Documents/AnaisGame/chopin/src/Login.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { useGameContext } from './context/GameContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\n\r\n\r\n\r\nconst getTokenfromUrl = () => {\r\n    return window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((initial, item) => {\r\n        let parts = item.split('=');\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        return initial;\r\n    }, {});\r\n}\r\n\r\n\r\nfunction Login() {\r\n    const [spotifyToken, setSpotifyToken] = useState(null);\r\n    const [nowPlaying, setNowPlaying] = useState({});\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const { playlist, setPlaylist } = useGameContext();\r\n    useEffect(() => {\r\n        console.log(\"Playlist in Login.js: \", playlist);\r\n      }, [playlist]);\r\n    \r\n\r\n    useEffect(() => {\r\n        console.log(\"This is what we derived from the URL: \", getTokenfromUrl());\r\n        const spotifyToken = getTokenfromUrl().access_token;\r\n        window.location.hash = \"\";\r\n        console.log(\"This is the token: \", spotifyToken);\r\n\r\n        if (spotifyToken) {\r\n            setSpotifyToken(spotifyToken);\r\n            //use SpotifyWebApi to get access to Spotify API\r\n            spotifyApi.setAccessToken(spotifyToken);\r\n            setLoggedIn(true);\r\n        }\r\n\r\n    })\r\n\r\n\r\n    const getNowPlaying = () => {\r\n        console.log(\"This is the playlist: \", playlist);\r\n        // spotifyApi.getMyCurrentPlaybackState()\r\n        // .then((response) => {\r\n        //     console.log(\"the id of the song is : \" , response.item.id);\r\n        //     setNowPlaying({\r\n        //         name: response.item.name,\r\n        //         albumArt: response.item.album.images[0].url\r\n        //     });\r\n        // })\r\n\r\n        setNowPlaying({\r\n                     name: playlist[0].name,\r\n                     albumArt: playlist[0].album.images[0].url\r\n                 });\r\n        console.log(\"playlist[0] song id: \", playlist[0].id);\r\n        const playTrack = async () => {\r\n            try {\r\n                spotifyApi.play({uris: [\"spotify:track:\" + playlist[0].id]})\r\n            } catch(error) {\r\n                console.log(\"Error :\", error.response);\r\n                // Check if the error response indicates no active device\r\n            if (error.response && error.response.error && error.response.error.reason === \"NO_ACTIVE_DEVICE\") {\r\n                alert(\"No active device found. Please make sure your Spotify app is open and connected.\");\r\n            } else {\r\n                alert(\"An error occurred while trying to play the track. Please try again.\");\r\n            }\r\n    }\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n                {!loggedIn && <a href=\"http://localhost:8888\">Login to Spotify</a>}\r\n                {loggedIn && <button onClick={getNowPlaying}>Check Now Playing</button>}\r\n                {loggedIn && <div>Now Playing: {nowPlaying.name}</div>}\r\n                {loggedIn && <div><img src={nowPlaying.albumArt} style={{ height: 150 }}/></div>}\r\n                \r\n        </div>\r\n    );\r\n    \r\n}\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}