{"ast":null,"code":"var _jsxFileName = \"H:\\\\Documents\\\\AnaisGame\\\\chopin\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { useGameContext } from './context/GameContext';\nimport { useNavigate } from 'react-router-dom';\nimport styles from \"./Game.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nfunction Game() {\n  _s();\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  const [nowPlaying, setNowPlaying] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  const {\n    playlist,\n    setPlaylist\n  } = useGameContext();\n  const [round, setRound] = useState(-1);\n  const {\n    currentUser,\n    setCurrentUser\n  } = useGameContext();\n  const [playlistName, setPlaylistName] = useState('');\n  const {\n    gamePlaylist,\n    setGamePlaylist\n  } = useGameContext();\n  const {\n    playerList,\n    setPlayerList\n  } = useGameContext();\n  const [replay, setReplay] = useState(false);\n  const [showPlaylistForm, setShowPlaylistForm] = useState(false);\n  const [SpotifyObjPlaylist, setSpotifyObjPlaylist] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    setGamePlaylist(gamePlaylist.concat(playlist));\n    console.log(\"GamePlaylist : \", gamePlaylist);\n  }, []);\n  const handlePlaylistNameChange = e => {\n    setPlaylistName(e.target.value);\n  };\n  useEffect(() => {\n    const intervalId = setInterval(getNowPlaying, 5000);\n    return () => clearInterval(intervalId);\n  }, []);\n  useEffect(() => {\n    console.log(\"Playlist : \", playlist);\n    if (nowPlaying.progress_ms >= nowPlaying.duration_ms || nowPlaying.progress_ms == 0 && nowPlaying.is_playing == false && round != -1) {\n      skip();\n    }\n  }, [nowPlaying]);\n  const getNowPlaying = () => {\n    console.log('FLAAAAG : ', SpotifyObjPlaylist && SpotifyObjPlaylist.external_urls.spotify);\n    spotifyApi.getMyCurrentPlaybackState().then(function (data) {\n      console.log('CurrentPlaybackstate :', data);\n      if (data) {\n        setNowPlaying({\n          name: data.item.name,\n          albumArt: data.item.album.images[0].url,\n          progress_ms: data.progress_ms,\n          duration_ms: data.item.duration_ms,\n          uri: data.item.uri,\n          is_playing: data.is_playing\n        });\n      }\n    }, function (err) {\n      console.log('Something went wrong in hte currentPlaybackstate', err);\n    });\n  };\n  const savePlaylist = playlistName => {\n    // Créer la playlist\n    spotifyApi.createPlaylist(currentUser.id, {\n      name: playlistName,\n      public: true\n    }).then(function (data) {\n      console.log('Created playlist!', data);\n\n      // Ajouter les morceaux à la playlist\n      setSpotifyObjPlaylist(data);\n      spotifyApi.addTracksToPlaylist(data.id, gamePlaylist.map(song => song.uri)).then(function (data) {\n        console.log('Added tracks to playlist!', data);\n      }).catch(function (err) {\n        console.log('Something went wrong creating the playlist!', err);\n      }).catch(function (err) {\n        console.log('Something went wrong adding tracks to the playlist!', err);\n      });\n    });\n  };\n  function play(track) {\n    // Vérifier si un ID de morceau est fourni\n    if (!track) {\n      console.log('No song ID provided');\n      return Promise.resolve(1); // Return a resolved promise with value 1\n    }\n\n    // Appel à l'API Spotify pour jouer un morceau sur un appareil actif\n    return spotifyApi.play({\n      uris: [track.uri]\n    }).then(function () {\n      console.log('Playback started for song ID:', track);\n      playlist.splice(playlist.indexOf(track), 1);\n      setRound(round + 1);\n\n      // Use setTimeout to handle playback duration and calling next step\n      setTimeout(() => {\n        getNowPlaying(); // Appelle la fonction next après que la durée soit écoulée\n      }, track.duration_ms);\n      return 0; // Return 0 to indicate success\n    }).catch(function (err) {\n      if (err.status === 404 && err.responseText.includes(\"NO_ACTIVE_DEVICE\")) {\n        alert('No active device found to play the track.');\n        return 1; // Return 1 if no active device is found\n      } else {\n        console.log('Something went wrong while trying to play the track:', err);\n        return 1; // Return 1 for other errors\n      }\n    });\n  }\n  const start = () => {\n    const randint = Math.floor(Math.random() * playlist.length);\n    play(playlist[randint]);\n    getNowPlaying();\n  };\n  const skip = () => {\n    if (playlist.length != 0) {\n      //track == nowPlaying || track == null\n      console.log('SONG SKIPPED');\n      const randint = Math.floor(Math.random() * playlist.length);\n      play(playlist[randint]);\n    } else exit();\n  };\n  const exit = () => {\n    setReplay(true);\n    spotifyApi.pause().then(function () {\n      console.log('Playback paused');\n    }).catch(function (err) {\n      console.log('Something went wrong while trying to pause the playback:', err);\n    });\n  };\n  const handleReplay = () => {\n    navigate('/song-selection');\n  };\n  const handleLeave = () => {\n    setPlaylistName(prevPlaylistName => {\n      var newPlaylistName = prevPlaylistName;\n      playerList.forEach(playerName => {\n        newPlaylistName = newPlaylistName + playerName.trim().slice(0, 3);\n      });\n      return \"[Chopin] \" + newPlaylistName;\n    });\n    setShowPlaylistForm(true);\n  };\n  const [showLink, setShowLink] = useState(false);\n  useEffect(() => {\n    if (SpotifyObjPlaylist) {\n      setShowLink(true);\n    }\n  }, [SpotifyObjPlaylist]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.gameContainer,\n    children: round === -1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: start,\n      className: styles.gameButton,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gameInnerContainer,\n      children: replay ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [!showPlaylistForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.replayOrLeave,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReplay,\n            className: styles.gameButton,\n            children: \"Replay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLeave,\n            className: styles.gameButton,\n            children: \"Leave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), showPlaylistForm && !SpotifyObjPlaylist && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"playlistName\",\n              children: \"Playlist name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"playlistName\",\n              type: \"text\",\n              className: styles.gameInput,\n              value: playlistName,\n              onChange: e => setPlaylistName(e.target.value),\n              placeholder: \"MyPlaylist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"View your playlist: \", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n              href: SpotifyObjPlaylist.external_urls.spotify,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: playlistName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), !SpotifyObjPlaylist && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => savePlaylist(playlistName),\n            className: styles.gameButton,\n            children: \"Save Playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.nowPlaying,\n          children: nowPlaying.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.nowPlaying,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nowPlaying.albumArt,\n            alt: nowPlaying.name,\n            className: styles.albumArt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: skip,\n          className: styles.gameButton,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"7O9Wh5KvgWlFf0sThtSjkx4+ETY=\", false, function () {\n  return [useGameContext, useGameContext, useGameContext, useGameContext, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useLocation","SpotifyWebApi","useGameContext","useNavigate","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","spotifyApi","Game","_s","spotifyToken","setSpotifyToken","nowPlaying","setNowPlaying","loggedIn","setLoggedIn","playlist","setPlaylist","round","setRound","currentUser","setCurrentUser","playlistName","setPlaylistName","gamePlaylist","setGamePlaylist","playerList","setPlayerList","replay","setReplay","showPlaylistForm","setShowPlaylistForm","SpotifyObjPlaylist","setSpotifyObjPlaylist","navigate","concat","console","log","handlePlaylistNameChange","e","target","value","intervalId","setInterval","getNowPlaying","clearInterval","progress_ms","duration_ms","is_playing","skip","external_urls","spotify","getMyCurrentPlaybackState","then","data","name","item","albumArt","album","images","url","uri","err","savePlaylist","createPlaylist","id","public","addTracksToPlaylist","map","song","catch","play","track","Promise","resolve","uris","splice","indexOf","setTimeout","status","responseText","includes","alert","start","randint","Math","floor","random","length","exit","pause","handleReplay","handleLeave","prevPlaylistName","newPlaylistName","forEach","playerName","trim","slice","showLink","setShowLink","className","gameContainer","children","onClick","gameButton","fileName","_jsxFileName","lineNumber","columnNumber","gameInnerContainer","replayOrLeave","style","marginTop","htmlFor","type","gameInput","onChange","placeholder","href","rel","src","alt","_c","$RefreshReg$"],"sources":["H:/Documents/AnaisGame/chopin/src/Game.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { useGameContext } from './context/GameContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from \"./Game.module.css\";\r\n\r\n\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\n\r\n\r\n\r\nfunction Game() {\r\n    const [spotifyToken, setSpotifyToken] = useState(null);\r\n    const [nowPlaying, setNowPlaying] = useState({});\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const { playlist, setPlaylist } = useGameContext();\r\n    const [round, setRound] = useState(-1);\r\n    const { currentUser, setCurrentUser } = useGameContext();\r\n    const [playlistName, setPlaylistName] = useState('');\r\n    const {gamePlaylist, setGamePlaylist} = useGameContext();\r\n    const {playerList, setPlayerList} = useGameContext();\r\n    const [replay, setReplay] = useState(false);\r\n    const [showPlaylistForm, setShowPlaylistForm] = useState(false);\r\n    const [SpotifyObjPlaylist, setSpotifyObjPlaylist] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n      useEffect(() => {\r\n        setGamePlaylist(gamePlaylist.concat(playlist));\r\n        console.log(\"GamePlaylist : \", gamePlaylist);\r\n      }, []);\r\n\r\n    const handlePlaylistNameChange = (e) => {\r\n      setPlaylistName(e.target.value);\r\n    };\r\n\r\n\r\n      useEffect(() => {\r\n        const intervalId = setInterval(getNowPlaying, 5000);\r\n        return () => clearInterval(intervalId);\r\n\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n\r\n        console.log(\"Playlist : \", playlist);\r\n        if (nowPlaying.progress_ms >= nowPlaying.duration_ms || (nowPlaying.progress_ms == 0 && nowPlaying.is_playing == false && round != -1)) {\r\n          skip();\r\n        }\r\n      },[nowPlaying]);  \r\n\r\n      const getNowPlaying = () => {\r\n          console.log('FLAAAAG : ', SpotifyObjPlaylist && SpotifyObjPlaylist.external_urls.spotify);\r\n\r\n          spotifyApi.getMyCurrentPlaybackState()\r\n          .then(function(data) {\r\n            console.log('CurrentPlaybackstate :', data);\r\n            if (data) {\r\n              setNowPlaying({\r\n                name: data.item.name,\r\n                albumArt: data.item.album.images[0].url,\r\n                progress_ms: data.progress_ms,\r\n                duration_ms: data.item.duration_ms,\r\n                uri: data.item.uri,\r\n                is_playing: data.is_playing,\r\n                });\r\n              }\r\n            }, \r\n            function(err) {\r\n            console.log('Something went wrong in hte currentPlaybackstate', err);\r\n            }\r\n          )\r\n        }\r\n\r\n        const savePlaylist = (playlistName) => {\r\n                    // Créer la playlist\r\n          spotifyApi.createPlaylist(currentUser.id, {\r\n            name: playlistName,\r\n            public: true\r\n          })\r\n          .then(function(data) {\r\n            console.log('Created playlist!', data);\r\n\r\n            // Ajouter les morceaux à la playlist\r\n            setSpotifyObjPlaylist(data);\r\n            spotifyApi.addTracksToPlaylist(data.id, gamePlaylist.map((song) => song.uri))\r\n\r\n          .then(function(data) {\r\n            console.log('Added tracks to playlist!', data);\r\n          })\r\n          .catch(function(err) {\r\n            console.log('Something went wrong creating the playlist!', err);\r\n          })\r\n          .catch(function(err) {\r\n            console.log('Something went wrong adding tracks to the playlist!', err);\r\n            });\r\n          });\r\n        }\r\n\r\n        function play(track) {\r\n          // Vérifier si un ID de morceau est fourni\r\n          if (!track) {\r\n            console.log('No song ID provided');\r\n            return Promise.resolve(1); // Return a resolved promise with value 1\r\n          }\r\n        \r\n          // Appel à l'API Spotify pour jouer un morceau sur un appareil actif\r\n          return spotifyApi.play({\r\n            uris: [track.uri]\r\n          })\r\n          .then(function() {\r\n            console.log('Playback started for song ID:', track);\r\n            playlist.splice(playlist.indexOf(track), 1);\r\n            setRound(round + 1);\r\n        \r\n            // Use setTimeout to handle playback duration and calling next step\r\n            setTimeout(() => {\r\n              getNowPlaying();  // Appelle la fonction next après que la durée soit écoulée\r\n            }, track.duration_ms);\r\n        \r\n            return 0;  // Return 0 to indicate success\r\n          })\r\n          .catch(function(err) {\r\n            if (err.status === 404 && err.responseText.includes(\"NO_ACTIVE_DEVICE\")) {\r\n              alert('No active device found to play the track.');\r\n              return 1; // Return 1 if no active device is found\r\n            } else {\r\n              console.log('Something went wrong while trying to play the track:', err);\r\n              return 1;  // Return 1 for other errors\r\n            }\r\n          });\r\n        }\r\n\r\n\r\n    const start = () => {\r\n\r\n      const randint = Math.floor(Math.random() * playlist.length);\r\n      play(playlist[randint]);\r\n      getNowPlaying();\r\n      \r\n\r\n\r\n\r\n     }\r\n    \r\n\r\n    const skip = () => {\r\n\r\n        if (playlist.length != 0) {                              //track == nowPlaying || track == null\r\n          console.log('SONG SKIPPED');\r\n          const randint = Math.floor(Math.random() * playlist.length);\r\n          play(playlist[randint]);\r\n        }\r\n        else \r\n          exit();\r\n        \r\n    }\r\n    const exit = () => {\r\n        setReplay(true);\r\n        spotifyApi.pause()\r\n        .then(function() {\r\n          console.log('Playback paused');\r\n        })\r\n        .catch(function(err) {\r\n          console.log('Something went wrong while trying to pause the playback:', err);\r\n        });\r\n\r\n      }\r\n    const handleReplay = () => {\r\n        navigate('/song-selection');\r\n      }\r\n    const handleLeave = () => {\r\n      setPlaylistName((prevPlaylistName) => {\r\n        var newPlaylistName = prevPlaylistName;\r\n        playerList.forEach((playerName) => {\r\n          newPlaylistName = newPlaylistName + playerName.trim().slice(0, 3);\r\n          })\r\n        return \"[Chopin] \" + newPlaylistName;\r\n      })\r\n        setShowPlaylistForm(true);\r\n      }\r\n\r\n      const [showLink, setShowLink] = useState(false);\r\n\r\n      useEffect(() => {\r\n        if (SpotifyObjPlaylist) {\r\n          setShowLink(true);\r\n        }\r\n      }, [SpotifyObjPlaylist]);\r\n    \r\n\r\n      return (\r\n        <div className={styles.gameContainer}>\r\n          {round === -1 ? (\r\n            <button onClick={start} className={styles.gameButton}>Play</button>\r\n          ) : (\r\n            <div className={styles.gameInnerContainer}>\r\n              {replay ? (\r\n                <>\r\n                  {!showPlaylistForm && (\r\n                    <div className={styles.replayOrLeave}>\r\n                      <button onClick={handleReplay} className={styles.gameButton}>Replay</button>\r\n                      <button onClick={handleLeave} className={styles.gameButton}>Leave</button>\r\n                    </div>\r\n                  )}\r\n                  {showPlaylistForm && !SpotifyObjPlaylist && (\r\n                    <>\r\n                      <div style={{ marginTop: '20px' }}>\r\n                        <label htmlFor=\"playlistName\">Playlist name: </label>\r\n                        <input\r\n                          id=\"playlistName\"\r\n                          type=\"text\"\r\n                          className={styles.gameInput}\r\n                          value={playlistName}\r\n                          onChange={(e) => setPlaylistName(e.target.value)}\r\n                          placeholder=\"MyPlaylist\"\r\n                        />\r\n                      </div>\r\n    \r\n                      \r\n                        <div>\r\n                          View your playlist: {' '}\r\n                          <a\r\n                            href={SpotifyObjPlaylist.external_urls.spotify}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                          >\r\n                            {playlistName}\r\n                          </a>\r\n                        </div>\r\n         \r\n    \r\n                      {!SpotifyObjPlaylist && (\r\n                        <button onClick={() => savePlaylist(playlistName)} className={styles.gameButton}>\r\n                          Save Playlist\r\n                        </button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className={styles.nowPlaying}>{nowPlaying.name}</div>\r\n                  <div className={styles.nowPlaying}>\r\n                    <img src={nowPlaying.albumArt} alt={nowPlaying.name} className={styles.albumArt} />\r\n                  </div>\r\n                  <button onClick={skip} className={styles.gameButton}>Next</button>\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}