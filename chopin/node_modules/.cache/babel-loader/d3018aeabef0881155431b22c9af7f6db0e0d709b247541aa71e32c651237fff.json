{"ast":null,"code":"var _jsxFileName = \"H:\\\\Documents\\\\AnaisGame\\\\chopin\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { useGameContext } from './context/GameContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nfunction Game() {\n  _s();\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  const [nowPlaying, setNowPlaying] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  const {\n    playlist,\n    setPlaylist\n  } = useGameContext();\n  const [round, setRound] = useState(-1);\n  const {\n    currentUser,\n    setCurrentUser\n  } = useGameContext();\n  const [playlistName, setPlaylistName] = useState('');\n  const {\n    gamePlaylist,\n    setGamePlaylist\n  } = useGameContext();\n  const {\n    playerList,\n    setPlayerList\n  } = useGameContext();\n  const [replay, setReplay] = useState(false);\n  const [showPlaylistForm, setShowPlaylistForm] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    setGamePlaylist(gamePlaylist.concat(playlist));\n    console.log(\"GamePlaylist : \", gamePlaylist);\n  }, []);\n  useEffect(() => {\n    setPlaylistName(prevPlaylistName => {\n      var newPlaylistName = prevPlaylistName;\n      playerList.forEach(playerName => {\n        newPlaylistName = newPlaylistName + playerName.trim().slice(0, 3);\n      });\n      return \"[Chopin] \" + newPlaylistName;\n    });\n  }, []);\n  const handlePlaylistNameChange = e => {\n    setPlaylistName(e.target.value);\n  };\n  useEffect(() => {\n    const intervalId = setInterval(getNowPlaying, 5000);\n    return () => clearInterval(intervalId);\n  }, []);\n  useEffect(() => {\n    console.log(\"Playlist : \", playlist);\n    if (nowPlaying.progress_ms >= nowPlaying.duration_ms || nowPlaying.progress_ms == 0 && nowPlaying.is_playing == false && round != -1) {\n      skip();\n    }\n  }, [nowPlaying]);\n  const getNowPlaying = () => {\n    spotifyApi.getMyCurrentPlaybackState().then(function (data) {\n      console.log('CurrentPlaybackstate :', data);\n      if (data) {\n        setNowPlaying({\n          name: data.item.name,\n          albumArt: data.item.album.images[0].url,\n          progress_ms: data.progress_ms,\n          duration_ms: data.item.duration_ms,\n          uri: data.item.uri,\n          is_playing: data.is_playing\n        });\n      }\n    }, function (err) {\n      console.log('Something went wrong in hte currentPlaybackstate', err);\n    });\n  };\n  const savePlaylist = playlistName => {\n    // Créer la playlist\n    spotifyApi.createPlaylist(currentUser.id, {\n      name: playlistName,\n      public: true\n    }).then(function (data) {\n      console.log('Created playlist!', data);\n\n      // Ajouter les morceaux à la playlist\n      spotifyApi.addTracksToPlaylist(data.id, gamePlaylist.map(song => song.uri)).then(function (data) {\n        console.log('Added tracks to playlist!', data);\n      }).catch(function (err) {\n        console.log('Something went wrong creating the playlist!', err);\n      }).catch(function (err) {\n        console.log('Something went wrong adding tracks to the playlist!', err);\n      });\n    });\n  };\n  function play(track) {\n    // Vérifier si un ID de morceau est fourni\n    if (!track) {\n      console.log('No song ID provided');\n      return Promise.resolve(1); // Return a resolved promise with value 1\n    }\n\n    // Appel à l'API Spotify pour jouer un morceau sur un appareil actif\n    return spotifyApi.play({\n      uris: [track.uri]\n    }).then(function () {\n      console.log('Playback started for song ID:', track);\n      playlist.splice(playlist.indexOf(track), 1);\n      setRound(round + 1);\n\n      // Use setTimeout to handle playback duration and calling next step\n      setTimeout(() => {\n        getNowPlaying(); // Appelle la fonction next après que la durée soit écoulée\n      }, track.duration_ms);\n      return 0; // Return 0 to indicate success\n    }).catch(function (err) {\n      if (err.status === 404 && err.responseText.includes(\"NO_ACTIVE_DEVICE\")) {\n        alert('No active device found to play the track.');\n        return 1; // Return 1 if no active device is found\n      } else {\n        console.log('Something went wrong while trying to play the track:', err);\n        return 1; // Return 1 for other errors\n      }\n    });\n  }\n  const start = () => {\n    const randint = Math.floor(Math.random() * playlist.length);\n    play(playlist[randint]);\n    getNowPlaying();\n  };\n  const skip = () => {\n    if (playlist.length != 0) {\n      //track == nowPlaying || track == null\n      console.log('SONG SKIPPED');\n      const randint = Math.floor(Math.random() * playlist.length);\n      play(playlist[randint]);\n    } else exit();\n  };\n  const exit = () => {\n    setReplay(true);\n    spotifyApi.pause().then(function () {\n      console.log('Playback paused');\n    }).catch(function (err) {\n      console.log('Something went wrong while trying to pause the playback:', err);\n    });\n  };\n  const handleReplay = () => {\n    navigate('/song-selection');\n  };\n  const handleLeave = () => {\n    setShowPlaylistForm(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: round === -1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: start,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: replay ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReplay,\n          children: \"Replay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLeave,\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 19\n        }, this), showPlaylistForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"playlistName\",\n              children: \"Playlist name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"playlistName\",\n              type: \"text\",\n              value: playlistName,\n              onChange: e => setPlaylistName(e.target.value),\n              placeholder: \"MyPlaylist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => savePlaylist(playlistName),\n            children: \"Save Playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: skip,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Now Playing: \", nowPlaying.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nowPlaying.albumArt,\n            style: {\n              height: 150\n            },\n            alt: nowPlaying.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"DLBnLaRV4qBzpt2sTJA2XzjCQPI=\", false, function () {\n  return [useGameContext, useGameContext, useGameContext, useGameContext, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useLocation","SpotifyWebApi","useGameContext","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","spotifyApi","Game","_s","spotifyToken","setSpotifyToken","nowPlaying","setNowPlaying","loggedIn","setLoggedIn","playlist","setPlaylist","round","setRound","currentUser","setCurrentUser","playlistName","setPlaylistName","gamePlaylist","setGamePlaylist","playerList","setPlayerList","replay","setReplay","showPlaylistForm","setShowPlaylistForm","navigate","concat","console","log","prevPlaylistName","newPlaylistName","forEach","playerName","trim","slice","handlePlaylistNameChange","e","target","value","intervalId","setInterval","getNowPlaying","clearInterval","progress_ms","duration_ms","is_playing","skip","getMyCurrentPlaybackState","then","data","name","item","albumArt","album","images","url","uri","err","savePlaylist","createPlaylist","id","public","addTracksToPlaylist","map","song","catch","play","track","Promise","resolve","uris","splice","indexOf","setTimeout","status","responseText","includes","alert","start","randint","Math","floor","random","length","exit","pause","handleReplay","handleLeave","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","htmlFor","type","onChange","placeholder","src","height","alt","_c","$RefreshReg$"],"sources":["H:/Documents/AnaisGame/chopin/src/Game.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { useGameContext } from './context/GameContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\n\r\n\r\n\r\nfunction Game() {\r\n    const [spotifyToken, setSpotifyToken] = useState(null);\r\n    const [nowPlaying, setNowPlaying] = useState({});\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const { playlist, setPlaylist } = useGameContext();\r\n    const [round, setRound] = useState(-1);\r\n    const { currentUser, setCurrentUser } = useGameContext();\r\n    const [playlistName, setPlaylistName] = useState('');\r\n    const {gamePlaylist, setGamePlaylist} = useGameContext();\r\n    const {playerList, setPlayerList} = useGameContext();\r\n    const [replay, setReplay] = useState(false);\r\n    const [showPlaylistForm, setShowPlaylistForm] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n      useEffect(() => {\r\n        setGamePlaylist(gamePlaylist.concat(playlist));\r\n        console.log(\"GamePlaylist : \", gamePlaylist);\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        setPlaylistName((prevPlaylistName) => {\r\n          var newPlaylistName = prevPlaylistName;\r\n          playerList.forEach((playerName) => {\r\n            newPlaylistName = newPlaylistName + playerName.trim().slice(0, 3);\r\n            })\r\n          return \"[Chopin] \" + newPlaylistName;\r\n        })\r\n      }, []);\r\n\r\n    const handlePlaylistNameChange = (e) => {\r\n      setPlaylistName(e.target.value);\r\n    };\r\n\r\n\r\n      useEffect(() => {\r\n        const intervalId = setInterval(getNowPlaying, 5000);\r\n        return () => clearInterval(intervalId);\r\n\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n\r\n        console.log(\"Playlist : \", playlist);\r\n        if (nowPlaying.progress_ms >= nowPlaying.duration_ms || (nowPlaying.progress_ms == 0 && nowPlaying.is_playing == false && round != -1)) {\r\n          skip();\r\n        }\r\n      },[nowPlaying]);  \r\n\r\n      const getNowPlaying = () => {\r\n          spotifyApi.getMyCurrentPlaybackState()\r\n          .then(function(data) {\r\n            console.log('CurrentPlaybackstate :', data);\r\n            if (data) {\r\n              setNowPlaying({\r\n                name: data.item.name,\r\n                albumArt: data.item.album.images[0].url,\r\n                progress_ms: data.progress_ms,\r\n                duration_ms: data.item.duration_ms,\r\n                uri: data.item.uri,\r\n                is_playing: data.is_playing,\r\n                });\r\n              }\r\n            }, \r\n            function(err) {\r\n            console.log('Something went wrong in hte currentPlaybackstate', err);\r\n            }\r\n          )\r\n        }\r\n\r\n        const savePlaylist = (playlistName) => {\r\n                    // Créer la playlist\r\n          spotifyApi.createPlaylist(currentUser.id, {\r\n            name: playlistName,\r\n            public: true\r\n          })\r\n          .then(function(data) {\r\n            console.log('Created playlist!', data);\r\n\r\n            // Ajouter les morceaux à la playlist\r\n            spotifyApi.addTracksToPlaylist(data.id, gamePlaylist.map((song) => song.uri))\r\n\r\n          .then(function(data) {\r\n            console.log('Added tracks to playlist!', data);\r\n          })\r\n          .catch(function(err) {\r\n            console.log('Something went wrong creating the playlist!', err);\r\n          })\r\n          .catch(function(err) {\r\n            console.log('Something went wrong adding tracks to the playlist!', err);\r\n            });\r\n          });\r\n        }\r\n\r\n        function play(track) {\r\n          // Vérifier si un ID de morceau est fourni\r\n          if (!track) {\r\n            console.log('No song ID provided');\r\n            return Promise.resolve(1); // Return a resolved promise with value 1\r\n          }\r\n        \r\n          // Appel à l'API Spotify pour jouer un morceau sur un appareil actif\r\n          return spotifyApi.play({\r\n            uris: [track.uri]\r\n          })\r\n          .then(function() {\r\n            console.log('Playback started for song ID:', track);\r\n            playlist.splice(playlist.indexOf(track), 1);\r\n            setRound(round + 1);\r\n        \r\n            // Use setTimeout to handle playback duration and calling next step\r\n            setTimeout(() => {\r\n              getNowPlaying();  // Appelle la fonction next après que la durée soit écoulée\r\n            }, track.duration_ms);\r\n        \r\n            return 0;  // Return 0 to indicate success\r\n          })\r\n          .catch(function(err) {\r\n            if (err.status === 404 && err.responseText.includes(\"NO_ACTIVE_DEVICE\")) {\r\n              alert('No active device found to play the track.');\r\n              return 1; // Return 1 if no active device is found\r\n            } else {\r\n              console.log('Something went wrong while trying to play the track:', err);\r\n              return 1;  // Return 1 for other errors\r\n            }\r\n          });\r\n        }\r\n\r\n\r\n    const start = () => {\r\n\r\n      const randint = Math.floor(Math.random() * playlist.length);\r\n      play(playlist[randint]);\r\n      getNowPlaying();\r\n      \r\n\r\n\r\n\r\n     }\r\n    \r\n\r\n    const skip = () => {\r\n\r\n        if (playlist.length != 0) {                              //track == nowPlaying || track == null\r\n          console.log('SONG SKIPPED');\r\n          const randint = Math.floor(Math.random() * playlist.length);\r\n          play(playlist[randint]);\r\n        }\r\n        else \r\n          exit();\r\n        \r\n    }\r\n    const exit = () => {\r\n        setReplay(true);\r\n        spotifyApi.pause()\r\n        .then(function() {\r\n          console.log('Playback paused');\r\n        })\r\n        .catch(function(err) {\r\n          console.log('Something went wrong while trying to pause the playback:', err);\r\n        });\r\n\r\n      }\r\n    const handleReplay = () => {\r\n        navigate('/song-selection');\r\n      }\r\n    const handleLeave = () => {\r\n        setShowPlaylistForm(true);\r\n      }\r\n\r\n\r\n      return (\r\n        <div className=\"Game\">\r\n          {round === -1 ? (\r\n            <button onClick={start}>Play</button>\r\n          ) : (\r\n            <>\r\n              {replay ? (\r\n                <>\r\n                  <button onClick={handleReplay}>Replay</button>\r\n      \r\n                  {/* Gestion de l'affichage du formulaire de la playlist */}\r\n                  <button onClick={handleLeave}>Leave</button>\r\n      \r\n                  {showPlaylistForm && (\r\n                    <>\r\n                      {/* Ajouter le champ pour nommer la playlist */}\r\n                      <div style={{ marginTop: '20px' }}>\r\n                        <label htmlFor=\"playlistName\">Playlist name: </label>\r\n                        <input\r\n                          id=\"playlistName\"\r\n                          type=\"text\"\r\n                          value={playlistName}\r\n                          onChange={(e) => setPlaylistName(e.target.value)}\r\n                          placeholder=\"MyPlaylist\"\r\n                        />\r\n                      </div>\r\n      \r\n                      {/* Bouton pour sauvegarder la playlist */}\r\n                      <button onClick={() => savePlaylist(playlistName)}>\r\n                        Save Playlist\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <button onClick={skip}>Next</button>\r\n                  <div>Now Playing: {nowPlaying.name}</div>\r\n                  <div>\r\n                    <img src={nowPlaying.albumArt} style={{ height: 150 }} alt={nowPlaying.name} />\r\n                  </div>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      );\r\n    \r\n}\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}