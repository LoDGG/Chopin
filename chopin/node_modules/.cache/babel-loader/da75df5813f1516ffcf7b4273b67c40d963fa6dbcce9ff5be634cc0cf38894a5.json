{"ast":null,"code":"var _jsxFileName = \"H:\\\\Documents\\\\AnaisGame\\\\chopin\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { useGameContext } from './context/GameContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nfunction Game() {\n  _s();\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  const [nowPlaying, setNowPlaying] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  const {\n    playlist,\n    setPlaylist\n  } = useGameContext();\n  const [round, setRound] = useState(-1);\n  const {\n    currentUser,\n    setCurrentUser\n  } = useGameContext();\n  const {\n    playlistName,\n    setPlaylistName\n  } = useGameContext();\n  const [gamePlaylist, setGamePlaylist] = useState(null);\n  useEffect(() => {\n    const intervalId = setInterval(getNowPlaying, 5000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const getNowPlaying = () => {\n    spotifyApi.getMyCurrentPlaybackState().then(function (data) {\n      console.log('CurrentPlaybackstate :', data);\n      if (data.is_playing) {\n        setNowPlaying({\n          name: data.item.name,\n          albumArt: data.item.album.images[0].url,\n          progress_ms: data.progress_ms,\n          duration_ms: data.item.duration_ms,\n          uri: data.item.uri\n        });\n      }\n    }, function (err) {\n      console.log('Something went wrong in hte currentPlaybackstate', err);\n    });\n  };\n  const play = track => {\n    // Vérifier si un ID de morceau est fourni\n    if (!track) {\n      console.log('No song ID provided');\n      return;\n    }\n    playlist.splice(playlist.indexOf(track), 1);\n\n    // Appel à l'API Spotify pour jouer un morceau sur un appareil actif\n    spotifyApi.play({\n      uris: [track.uri]\n    }).then(function () {\n      console.log('Playback started for song ID:', track);\n      setTimeout(() => {\n        skip(); // Appelle la fonction next après que la durée soit écoulée\n      }, track.duration_ms);\n    }).catch(function (err) {\n      if (err.status === 404 && err.responseText.includes(\"NO_ACTIVE_DEVICE\")) {\n        alert('No active device found to play the track.');\n      } else {\n        console.log('Something went wrong while trying to play the track:', err);\n      }\n    });\n  };\n  const start = () => {\n    // Créer la playlist\n    spotifyApi.createPlaylist(currentUser.id, {\n      name: playlistName,\n      public: false\n    }).then(function (data) {\n      console.log('Created playlist!', data);\n      setGamePlaylist(data);\n\n      // Ajouter les morceaux à la playlist\n      spotifyApi.addTracksToPlaylist(data.id, playlist.map(song => song.uri));\n      setRound(round + 1);\n      const randint = Math.floor(Math.random() * playlist.length);\n      play(playlist[randint]);\n    }).then(function (data) {\n      console.log('Added tracks to playlist!', data);\n    }).catch(function (err) {\n      console.log('Something went wrong creating the playlist!', err);\n    }).catch(function (err) {\n      console.log('Something went wrong adding tracks to the playlist!', err);\n    });\n\n    // setRound(round + 1);\n    // console.log('This is the gamePlaylist URI : ',gamePlaylist.uri);\n    // spotifyApi.play({\n    //   context_uri: gamePlaylist.uri\n    // }).then(function(data) {\n    //   console.log('Playing playlist!', data);\n    // })\n    // .catch(function(err) {\n    //   console.log('Something went wrong playing the playlist!', err);\n    // });\n  };\n  const skip = track => {\n    getNowPlaying();\n    if (track == nowPlaying) {\n      console.log('SONG SKIPPED');\n      setRound(round + 1);\n      const randint = Math.floor(Math.random() * playlist.length);\n      play(playlist[randint]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: round === -1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: start,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: skip,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Now Playing: \", nowPlaying.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: nowPlaying.albumArt,\n          style: {\n            height: 150\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 7\n  }, this);\n}\n_s(Game, \"HBh5GK2MAmuDDXQLNR3Fl/jWgSQ=\", false, function () {\n  return [useGameContext, useGameContext, useGameContext];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useLocation","SpotifyWebApi","useGameContext","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","spotifyApi","Game","_s","spotifyToken","setSpotifyToken","nowPlaying","setNowPlaying","loggedIn","setLoggedIn","playlist","setPlaylist","round","setRound","currentUser","setCurrentUser","playlistName","setPlaylistName","gamePlaylist","setGamePlaylist","intervalId","setInterval","getNowPlaying","clearInterval","getMyCurrentPlaybackState","then","data","console","log","is_playing","name","item","albumArt","album","images","url","progress_ms","duration_ms","uri","err","play","track","splice","indexOf","uris","setTimeout","skip","catch","status","responseText","includes","alert","start","createPlaylist","id","public","addTracksToPlaylist","map","song","randint","Math","floor","random","length","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","style","height","_c","$RefreshReg$"],"sources":["H:/Documents/AnaisGame/chopin/src/Game.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { useGameContext } from './context/GameContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\n\r\n\r\n\r\nfunction Game() {\r\n    const [spotifyToken, setSpotifyToken] = useState(null);\r\n    const [nowPlaying, setNowPlaying] = useState({});\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const { playlist, setPlaylist } = useGameContext();\r\n    const [round, setRound] = useState(-1);\r\n    const { currentUser, setCurrentUser } = useGameContext();\r\n    const {playlistName, setPlaylistName} = useGameContext();\r\n    const [gamePlaylist, setGamePlaylist] = useState(null);\r\n\r\n\r\n\r\n      useEffect(() => {\r\n        const intervalId = setInterval(getNowPlaying, 5000);\r\n        return () => clearInterval(intervalId);\r\n\r\n      }, []);\r\n\r\n      const getNowPlaying = () => {\r\n          spotifyApi.getMyCurrentPlaybackState()\r\n          .then(function(data) {\r\n            console.log('CurrentPlaybackstate :', data);\r\n            if (data.is_playing) {\r\n              setNowPlaying({\r\n                name: data.item.name,\r\n                albumArt: data.item.album.images[0].url,\r\n                progress_ms: data.progress_ms,\r\n                duration_ms: data.item.duration_ms,\r\n                uri: data.item.uri\r\n                });\r\n              }\r\n            }, \r\n            function(err) {\r\n            console.log('Something went wrong in hte currentPlaybackstate', err);\r\n            }\r\n          )\r\n        }\r\n\r\n      const play = (track) => {\r\n        // Vérifier si un ID de morceau est fourni\r\n        if (!track) {\r\n          console.log('No song ID provided');\r\n          return;\r\n        }\r\n        playlist.splice(playlist.indexOf(track), 1);\r\n      \r\n        // Appel à l'API Spotify pour jouer un morceau sur un appareil actif\r\n        spotifyApi.play({\r\n          uris: [track.uri]\r\n        })\r\n        .then(function() {\r\n          console.log('Playback started for song ID:', track);\r\n          setTimeout(() => {\r\n            skip();  // Appelle la fonction next après que la durée soit écoulée\r\n          },track.duration_ms);\r\n        })\r\n        .catch(function(err) {\r\n          if (err.status === 404 && err.responseText.includes(\"NO_ACTIVE_DEVICE\")) {\r\n            alert('No active device found to play the track.');\r\n          } else {\r\n            console.log('Something went wrong while trying to play the track:', err);\r\n          }\r\n        });\r\n      };\r\n\r\n\r\n    const start = () => {\r\n        // Créer la playlist\r\n        spotifyApi.createPlaylist(currentUser.id, {\r\n          name: playlistName,\r\n          public: false\r\n        })\r\n        .then(function(data) {\r\n          console.log('Created playlist!', data);\r\n          setGamePlaylist(data);\r\n\r\n          // Ajouter les morceaux à la playlist\r\n          spotifyApi.addTracksToPlaylist(data.id, playlist.map((song) => song.uri))\r\n          setRound(round + 1);\r\n          const randint = Math.floor(Math.random() * playlist.length);\r\n          play(playlist[randint]);\r\n        })\r\n        .then(function(data) {\r\n          console.log('Added tracks to playlist!', data);\r\n        })\r\n        .catch(function(err) {\r\n          console.log('Something went wrong creating the playlist!', err);\r\n        })\r\n        .catch(function(err) {\r\n          console.log('Something went wrong adding tracks to the playlist!', err);\r\n        });\r\n\r\n\r\n        // setRound(round + 1);\r\n        // console.log('This is the gamePlaylist URI : ',gamePlaylist.uri);\r\n        // spotifyApi.play({\r\n        //   context_uri: gamePlaylist.uri\r\n        // }).then(function(data) {\r\n        //   console.log('Playing playlist!', data);\r\n        // })\r\n        // .catch(function(err) {\r\n        //   console.log('Something went wrong playing the playlist!', err);\r\n        // });\r\n      };\r\n\r\n    const skip = (track) => {\r\n\r\n        getNowPlaying();\r\n        if (track == nowPlaying) {\r\n          console.log('SONG SKIPPED');\r\n          setRound(round + 1);\r\n          const randint = Math.floor(Math.random() * playlist.length);\r\n          play(playlist[randint]);\r\n        }\r\n          \r\n    }\r\n\r\n    return (\r\n      <div className=\"Game\">\r\n      {round === -1 ? (\r\n        <button onClick={start}>Play</button>\r\n      ) : (\r\n        <>\r\n          <button onClick={skip}>Next</button>\r\n          <div>Now Playing: {nowPlaying.name}</div>\r\n          <div><img src={nowPlaying.albumArt} style={{ height: 150 }}/></div>\r\n        </>\r\n      )}\r\n    </div>\r\n    );\r\n    \r\n}\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}